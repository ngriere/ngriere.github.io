{"version":3,"file":"component---src-templates-blog-post-js-4cc2a6e091d1a766381a.js","mappings":"iMA8DA,EAzDe,WAAO,IAAD,EAeXA,EAAM,WAdCC,EAAAA,EAAAA,gBAAe,cAcRC,KAAKC,oBAAb,aAAG,EAAwBH,OAEvC,OACI,6CAEI,qBAAGI,KAAI,8BAA8BJ,MAAAA,OAAA,EAAAA,EAAQK,WAAR,IAA0BC,UAAU,eACrE,gBAAC,EAAAC,EAAD,CACIC,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,8BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,mBAPR,sBAUJ,qBAAGV,KAAI,wBAAwBJ,MAAAA,OAAA,EAAAA,EAAQe,SAAR,IAAwBT,UAAU,eAC7D,gBAAC,EAAAC,EAAD,CACIC,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,iBAPR,uBAUJ,qBAAGV,KAAI,qCAAqCJ,MAAAA,OAAA,EAAAA,EAAQgB,SAAR,IAAwBV,UAAU,eAC1E,gBAAC,EAAAC,EAAD,CACIC,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,iBAPR,yBCIhB,EAxCY,WAAO,IAAD,EAeRG,EAAM,WAdChB,EAAAA,EAAAA,gBAAe,cAcRC,KAAKC,oBAAb,aAAG,EAAwBc,OAEvC,OACI,uBAAKX,UAAU,OACX,gBAAC,EAAAC,EAAD,CACID,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARR,uBAUCG,MAAAA,OAAA,EAAAA,EAAQC,OACL,yCACiB,8BAASD,EAAOC,MADjC,MACkDD,MAAAA,OAAA,EAAAA,EAAQE,UAAW,KADrE,IAGI,gBAAC,EAAD,U,kFCqBpB,UA3DyB,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKlB,KAAKC,oBAAV,eAAwBsB,QAAxB,QACVC,EAAmBN,EAAnBM,SAAUC,EAASP,EAATO,KAElB,OACE,gBAAC,IAAD,CAAQN,SAAUA,EAAUI,MAAOD,GACjC,gBAAC,IAAD,CACEC,MAAOH,EAAKM,YAAYH,MACxBI,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UAEpD,2BACExB,UAAU,YACVyB,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYX,EAAKM,YAAYH,OAC1C,yBAAIH,EAAKM,YAAYM,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQd,EAAKe,MACxCJ,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAD,QAGJ,uBAAK3B,UAAU,iBACb,sBACEgC,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGjB,GACC,gBAAC,EAAAkB,KAAD,CAAMC,GAAInB,EAASoB,OAAOC,KAAMC,IAAI,QAApC,KACKtB,EAASE,YAAYH,QAI9B,0BACGE,GACC,gBAAC,EAAAiB,KAAD,CAAMC,GAAIlB,EAAKmB,OAAOC,KAAMC,IAAI,QAC7BrB,EAAKC,YAAYH,MADpB,Y","sources":["webpack://gatsby-starter-blog/./src/components/social.js","webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["\r\nimport * as React from \"react\"\r\nimport {graphql, useStaticQuery} from \"gatsby\"\r\nimport {StaticImage} from \"gatsby-plugin-image\"\r\n\r\nconst Social = () => {\r\n    const data = useStaticQuery(graphql`\r\n    query SocialQuery {\r\n      site {\r\n        siteMetadata {\r\n          social {\r\n            linkedin\r\n            github\r\n            strava\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n    const social = data.site.siteMetadata?.social;\r\n\r\n    return (\r\n        <div>\r\n            Follow me here:\r\n            <a href={`https://www.linkedin.com/${social?.linkedin || ``}`} className='social-logo'>\r\n                <StaticImage\r\n                    layout=\"fixed\"\r\n                    formats={[\"auto\", \"webp\", \"avif\"]}\r\n                    src=\"../images/linkedin-logo.png\"\r\n                    width={32}\r\n                    height={32}\r\n                    quality={95}\r\n                    alt=\"LinkedIn profile\"\r\n                />\r\n            </a>\r\n            <a href={`https://github.com/${social?.github || ``}`} className='social-logo'>\r\n                <StaticImage\r\n                    layout=\"fixed\"\r\n                    formats={[\"auto\", \"webp\", \"avif\"]}\r\n                    src=\"../images/github-logo.png\"\r\n                    width={32}\r\n                    height={32}\r\n                    quality={95}\r\n                    alt=\"Github profile\"\r\n                />\r\n            </a>\r\n            <a href={`https://www.strava.com/athletes/${social?.strava || ``}`} className='social-logo'>\r\n                <StaticImage\r\n                    layout=\"fixed\"\r\n                    formats={[\"auto\", \"webp\", \"avif\"]}\r\n                    src=\"../images/strava-logo.png\"\r\n                    width={32}\r\n                    height={32}\r\n                    quality={95}\r\n                    alt=\"Strava profile\"\r\n                />\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Social\r\n","/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport {graphql, useStaticQuery} from \"gatsby\"\r\nimport {StaticImage} from \"gatsby-plugin-image\"\r\nimport Social from \"./social\"\r\n\r\nconst Bio = () => {\r\n    const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n    // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n    const author = data.site.siteMetadata?.author\r\n\r\n    return (\r\n        <div className=\"bio\">\r\n            <StaticImage\r\n                className=\"bio-avatar\"\r\n                layout=\"fixed\"\r\n                formats={[\"auto\", \"webp\", \"avif\"]}\r\n                src=\"../images/profile-pic.png\"\r\n                width={50}\r\n                height={50}\r\n                quality={95}\r\n                alt=\"Profile picture\"\r\n            />\r\n            {author?.name && (\r\n                <p>\r\n                    Howdy ! I am <strong>{author.name}</strong>, {author?.summary || null}\r\n                    {` `}\r\n                    <Social/>\r\n                </p>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bio\r\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["social","useStaticQuery","site","siteMetadata","href","linkedin","className","S","layout","formats","src","width","height","quality","alt","github","strava","author","name","summary","data","location","post","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}