{"version":3,"file":"component---src-pages-index-js-7eb41bc301e49d86ecf9.js","mappings":"iMA8DA,EAzDe,WAAO,IAAD,EAeXA,EAAM,WAdCC,EAAAA,EAAAA,gBAAe,cAcRC,KAAKC,oBAAb,aAAG,EAAwBH,OAEvC,OACI,6CAEI,qBAAGI,KAAI,8BAA8BJ,MAAAA,OAAA,EAAAA,EAAQK,WAAR,IAA0BC,UAAU,eACrE,gBAAC,EAAAC,EAAD,CACIC,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,8BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,mBAPR,sBAUJ,qBAAGV,KAAI,wBAAwBJ,MAAAA,OAAA,EAAAA,EAAQe,SAAR,IAAwBT,UAAU,eAC7D,gBAAC,EAAAC,EAAD,CACIC,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,iBAPR,uBAUJ,qBAAGV,KAAI,qCAAqCJ,MAAAA,OAAA,EAAAA,EAAQgB,SAAR,IAAwBV,UAAU,eAC1E,gBAAC,EAAAC,EAAD,CACIC,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,iBAPR,yBCIhB,EAxCY,WAAO,IAAD,EAeRG,EAAM,WAdChB,EAAAA,EAAAA,gBAAe,cAcRC,KAAKC,oBAAb,aAAG,EAAwBc,OAEvC,OACI,uBAAKX,UAAU,OACX,gBAAC,EAAAC,EAAD,CACID,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARR,uBAUCG,MAAAA,OAAA,EAAAA,EAAQC,OACL,yCACiB,8BAASD,EAAOC,MADjC,MACkDD,MAAAA,OAAA,EAAAA,EAAQE,UAAW,KADrE,IAGI,gBAAC,EAAD,U,kFCoBpB,UA1DkB,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKlB,KAAKC,oBAAV,eAAwBoB,QAAxB,QACZC,EAAQJ,EAAKK,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQN,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,sBAAIK,MAAO,CAAEC,UAAU,SACpBL,EAAMM,KAAI,SAAAC,GACT,IAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACE5B,UAAU,iBACV8B,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,wBAAMA,SAAS,YAAYjB,KAG/B,6BAAQQ,EAAKC,YAAYS,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAE/CL,SAAS,0B","sources":["webpack://gatsby-starter-blog/./src/components/social.js","webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["\r\nimport * as React from \"react\"\r\nimport {graphql, useStaticQuery} from \"gatsby\"\r\nimport {StaticImage} from \"gatsby-plugin-image\"\r\n\r\nconst Social = () => {\r\n    const data = useStaticQuery(graphql`\r\n    query SocialQuery {\r\n      site {\r\n        siteMetadata {\r\n          social {\r\n            linkedin\r\n            github\r\n            strava\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n    const social = data.site.siteMetadata?.social;\r\n\r\n    return (\r\n        <div>\r\n            Follow me here:\r\n            <a href={`https://www.linkedin.com/${social?.linkedin || ``}`} className='social-logo'>\r\n                <StaticImage\r\n                    layout=\"fixed\"\r\n                    formats={[\"auto\", \"webp\", \"avif\"]}\r\n                    src=\"../images/linkedin-logo.png\"\r\n                    width={32}\r\n                    height={32}\r\n                    quality={95}\r\n                    alt=\"LinkedIn profile\"\r\n                />\r\n            </a>\r\n            <a href={`https://github.com/${social?.github || ``}`} className='social-logo'>\r\n                <StaticImage\r\n                    layout=\"fixed\"\r\n                    formats={[\"auto\", \"webp\", \"avif\"]}\r\n                    src=\"../images/github-logo.png\"\r\n                    width={32}\r\n                    height={32}\r\n                    quality={95}\r\n                    alt=\"Github profile\"\r\n                />\r\n            </a>\r\n            <a href={`https://www.strava.com/athletes/${social?.strava || ``}`} className='social-logo'>\r\n                <StaticImage\r\n                    layout=\"fixed\"\r\n                    formats={[\"auto\", \"webp\", \"avif\"]}\r\n                    src=\"../images/strava-logo.png\"\r\n                    width={32}\r\n                    height={32}\r\n                    quality={95}\r\n                    alt=\"Strava profile\"\r\n                />\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Social\r\n","/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport {graphql, useStaticQuery} from \"gatsby\"\r\nimport {StaticImage} from \"gatsby-plugin-image\"\r\nimport Social from \"./social\"\r\n\r\nconst Bio = () => {\r\n    const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n    // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n    const author = data.site.siteMetadata?.author\r\n\r\n    return (\r\n        <div className=\"bio\">\r\n            <StaticImage\r\n                className=\"bio-avatar\"\r\n                layout=\"fixed\"\r\n                formats={[\"auto\", \"webp\", \"avif\"]}\r\n                src=\"../images/profile-pic.png\"\r\n                width={50}\r\n                height={50}\r\n                quality={95}\r\n                alt=\"Profile picture\"\r\n            />\r\n            {author?.name && (\r\n                <p>\r\n                    Howdy ! I am <strong>{author.name}</strong>, {author?.summary || null}\r\n                    {` `}\r\n                    <Social/>\r\n                </p>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bio\r\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["social","useStaticQuery","site","siteMetadata","href","linkedin","className","S","layout","formats","src","width","height","quality","alt","github","strava","author","name","summary","data","location","siteTitle","title","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}